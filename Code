>>> 2 + 5
7
>>> 5 - 2
3
>>> 5 // 2
2
>>> 5 / 2
2.5
>>> 2 ** 3
8
>>> print('Python')
Python
>>> print('navin's laptop')
  File "<stdin>", line 1
    print('navin's laptop')
                 ^
SyntaxError: invalid syntax
>>> print("navin's laptop")
navin's laptop
>>> print('navin "laptop"')
navin "laptop"
>>> print('navin's "laptop"')
  File "<stdin>", line 1
    print('navin's "laptop"')
                 ^
SyntaxError: invalid syntax
>>> print('navin\'s "laptop"')
navin's "laptop"
>>> 10 * 'Me'
'MeMeMeMeMeMeMeMeMeMe'
>>> print('c:\docs\navin')
c:\docs
avin
>>> print(r'c:\docs\navin')
c:\docs\navin
>>> num = 2.5
>>> type(num)
<class 'float'>
>>> num = 5
>>> type(num)
<class 'int'>
>>> num = 6+9j
>>> type(num)
<class 'complex'>
>>> a = 5.6
>>> b = int(a)
>>> type(b)
<class 'int'>
>>> b
5
>>> k = float(b)
>>> k
5.0
>>> k = 6
>>> c = complex(b,k)
>>> c
(5+6j)
>>> b<k
True
>>> boll = b < k
>>> bool
<class 'bool'>
>>> b > k
False
>>> int(True)
1
>>> int(False)
0
>>> 1st = [25,36,45,12]
SyntaxError: invalid syntax
>>> lst = [25,36,45,12]
>>> type(lst)
<class 'list'>
>>> s = {25,36,45,15,12,25}
>>> s
{36, 12, 45, 15, 25}
>>> type(s)
<class 'set'>
>>> t = (25,36,4,57,12)
>>> type(t)
<class 'tuple'>
>>> str = "navin"
>>> st = 'a'
>>> type(st)
<class 'str'>
>>> range(10)
range(0, 10)
>>> list(range(10))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> list(range(2,10,2))
[2, 4, 6, 8]
>>> type(range(10))
<class 'range'>
>>> d = {'navin':'samsung','rahul':'Iphone','kiran':'Oneplus'}
>>> d
{'navin': 'samsung', 'rahul': 'Iphone', 'kiran': 'Oneplus'}
>>> d.keys()
dict_keys(['navin', 'rahul', 'kiran'])
>>> d.values()
dict_values(['samsung', 'Iphone', 'Oneplus'])
>>> d['rahul']
'Iphone'
>>> d.get('kiran')
'Oneplus'
>>> x = 2
>>> y = 3
>>> x + y
5
>>> x - y
-1
>>> x * y
6
>>> x * y
6
>>> x/y
0.6666666666666666
>>> x = x + 2
>>> x
4
>>> x +=2
>>> x
6
>>> x *= 3
>>> x
18
>>> a,b = 5,6
>>> a
5
>>> b
6
>>> n = 7
>>> n
7
>>> -n
-7
>>> n
7
>>> n = -n
>>> n
-7
>>> a < b
True
>>> a > b
False
>>> a == b
False
>>> a = 6
>>> a == b
True
>>> a <= b
True
>>> a >= b
True
>>> a != b
False
>>> b = 7
>>> a != b
True
>>> a = 5
>>> b = 4
>>> a < 8 and b < 5
True
>>> a < 8 and b < 2
False
>>> a < 8 or b < 2
True
>>> x = True
>>> x
True
>>> not x
False
>>> x = not x
>>> x
False
>>> bin(25)
'0b11001'
>>> 0b0101
5
>>> oct(25)
'0o31'
>>> hex(25)
'0x19'
>>> hex(10)
'0xa'
>>> 0xf
15
>>> ~12
-13
>>> 12 & 13
12
>>> 12 | 13
13
>>> 25 & 30
24
>>> 12 ^ 1
13
>>> 12 ^ 13
1
>>> 25 ^ 30
7

>>> num = 5
>>> id(num)
1481828336
>>> name = 'navin'
>>> id(name)
26449792
>>> a = 10
>>> b = a
>>> a
10
>>> b
10
>>> id(a)
1481828416
>>> id(b)
1481828416
>>> id(10)
1481828416
>>> k = 10
>>> id(k)
1481828416
>>> a = 9
>>> id(a)
1481828400
>>> id(b)
1481828416
>>> k = a
>>> id(k)
1481828400
>>> b = 8
>>> PI = 3.14
>>> PI
3.14
>>> PI = 3.15
>>> type(PI)
<class 'float'>

>>> num = 2.5
>>> type(num)
<class 'float'>
>>> num = 5
>>> type(num)
<class 'int'>
>>> num = 6+9j
>>> type(num)
<class 'complex'>
>>> a = 5.6
>>> b = int(a)
>>> type(b)
<class 'int'>
>>> b
5
>>> k = float(b)
>>> k
5.0
>>> k = 6
>>> c = complex(b,k)
>>> c
(5+6j)
>>> b<k
True
>>> bool = b<k
>>> bool
True
>>> type(bool)
<class 'bool'>
>>> b > k
False
>>> int(True)
1
>>> int(False)
0
>>> lst = [25,65,76,89]
>>> type(lst)
<class 'list'>
>>> s = {45,67,78,97,34}
>>> s
{97, 34, 67, 45, 78}
>>> type(s)
<class 'set'>
>>> t = (54,78,97,35,67,98)
>>> type(t)
<class 'tuple'>
>>> str = "navin"
>>> st = 'a'
>>> type(st)
<class 'str'>
>>> range(10)
range(0, 10)
>>> list(range(10))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> list(range(2,10,2))
[2, 4, 6, 8]
>>> type(range)
<class 'type'>
>>> d = {'navin':'samsung','rahul':'Iphone','kiran':'Oneplus'}
>>> d
{'navin': 'samsung', 'rahul': 'Iphone', 'kiran': 'Oneplus'}
>>> d.keys()
dict_keys(['navin', 'rahul', 'kiran'])
>>> d.values()
dict_values(['samsung', 'Iphone', 'Oneplus'])
>>> d['rahul']
'Iphone'
>>> d.get('kiran')
'Oneplus'

>>> x = 3
>>> y = 3
>>> x + y
6
>>> x - y
0
>>> x * y
9
>>> x / y
1.0
>>> x = 8
>>> x = x + 2
>>> x
10
>>> x +=2
>>> x
12
>>> x*=3
>>> x
36
>>> a,b = 5,6
>>> a
5
>>> b
6
>>> n = 7
>>> n
7
>>> -n
-7
>>> n
7
>>> n = -n
>>> n
-7
>>> a < b
True
>>> a>b
False
>>> a ==b
False
>>> a = 6
>>> a == b
True
>>> a <= b
True
>>> a >= b
True
>>> a != b
False
>>> b = 7
>>> a!= b
True
>>> a = 5
>>> b = 4
>>> a < 8 and b < 5
True
>>> a < 8 and b < 2
False
>>> a < 8 or b < 2
True
>>> x = True
>>> x
True
>>> not x
False
>>> x = not x
>>> x
False

>>> bin(25)
'0b11001'
>>> 0b0101
5
>>> 0b1111
15
>>> oct(25)
'0o31'
>>> hex(23)
'0x17'
>>> hex(10)
'0xa'
>>> 0xf
15
>>> 0b110011010
410

a = 5
b = 6

a = a ^ b
b = a ^ b
a = a ^ b

print(a)
print(b)

a = 5
b = 6

a = a + b
b = a - b
a = a - b

print(a)
print(b)

a = 5
b = 60

a,b = b,a

print(a)
print(b)

>>> ~12
-13
>>> 12 & 13
12
>>> 12 | 13
13
>>> 25 & 30
24
>>> 12 ^ 13
1
>>> 25 ^ 13
20
>>> 10 << 2
40
>>> 10 >> 2
2
>>> import math
>>> x = math.sqrt(25)
>>> x
5.0
>>> print(math.floor(2.9))
2
>>> print(math.ceil(2.2))
3
>>> 3**2
9
>>> print(math.pow(3,2))
9.0
>>> print(math.pi)
3.141592653589793
>>> print(math.e)
2.718281828459045
>>> import math as m
>>> math.sqrt(25)
5.0
>>> math.sqrt(25)
Traceback (most recent call last):
  File "<pyshell#0>", line 1, in <module>
    math.sqrt(25)
NameError: name 'math' is not defined
>>> from math import sqrt, pow
>>> pow(4,5)
1024.0

x = int(input("Enter a first number:"))
y = int(input("Enter a second number:"))
z = x + y
print("The sum of the given numbers are:",z)

ch = input("Enter a char:")[0]
print(ch)

result = eval(input("Enter an expression:"))
print(result)

x = 13
r = x % 2
if r==0:
    print("Even")
else:
    print("Odd")
print("Bye!!")

x = 12
r = x % 2
if r==0:
    print("Even")
    if x>5:
        print("Great")
    else:
        print("Not so great")
else:
    print("Odd")
print("Bye!!")

x = 5
if x==1:
    print("One")
if x==1:
    print("One")
elif x==2:
    print("Two")
elif x==3:
    print("Three")
elif x==4:
    print("Four")
else:
    print("Wrong Input")

i = 1
while i<=5:
    print("Hi There")
    i = i + 1
    
i = 5
while i>=1:
    print("Hi There")
    i = i - 1
    
i = 5
j = 1
while i>=1:
    print("Hi There ",end="")
    j = 1
    while j<=4:
        print("Rocks ",end="")
        j = j + 1
    i = i - 1
    print()

x = ["navin",65,8.9]
for i in x:
    print(i)

x = "navin"
for i in x:
    print(i)
    
for i in ["navin",65,8.7]:
    print(i)
    
for i in [2,4,6]:
    print(i)
    
for i in range(10):
    print(i)

for i in range(0,10,1):
    print(i)

for i in range(20,10,-1):
    print(i)

for i in range(1,21):
    if i%5!=0:
         print(i)

av = 10
x = int(input("How many candies you want?"))
i = 1
while i<= x:
    if i>av:
        print("Out of stock")
        break
    print("Candy")
    i+=1
print("Bye")

for i in range(1,100):
    if i%3==0 and i%5==0:
        continue
    print(i)
print("Bye")

for i in range(1,100):
    if i%2!=0:
        pass
    else:
        print(i)
print("Bye")

for i in range(4):
     for j in range(4):
         print("#",end=" ")
     print()

for i in range(4):
     for j in range(i+1):
         print("#",end=" ")
     print()

for i in range(4):
     for j in range(4-i):
         print("#",end=" ")
     print()

nums = [12,16,18,21,26]
for num in nums:
    if num % 5 == 0:
        print(num)
        break
else:
    print("Not Found")

num = 10
for i in  range(2,num):
    if num % i == 0:
        print("Not Prime")
        break
else:
    print("Prime")

from array import *
vals = array('i',[5,9,-8,4,2])
print(vals.reverse())

from array import *
vals = array('i',[5,9,-8,4,2])
print(vals.buffer_info())

from array import *
vals = array('i',[5,9,-8,4,2])
for i in range(5):
    print(vals[i])
    
from array import *
vals = array('i',[5,9,-8,4,2])
for i in range(len(vals)):
    print(vals[i])
    
from array import *
vals = array('i',[5,9,-8,4,2])
for e in vals:
    print(e)
    
from array import *
vals = array('u',['a','e','i'])
for e in vals:
    print(e)
    
from array import *
vals = array('i',[5,9,8,4,2])
newArr = array(vals.typecode, (a for a in vals))
for e in newArr:
    print(e)
    
from array import *
vals = array('i',[5,9,8,4,2])
newArr = array(vals.typecode, (a*a for a in vals))
for e in newArr:
    print(e)
    
from array import *
vals = array('i',[5,9,8,4,2])
newArr = array(vals.typecode, (a*a for a in vals))
i = 0
while i<len(newArr):
    print(newArr[i])
    i+=1
